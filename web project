<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>First Project - Combined Demo</title>
  <style>
    /* Import modern font */
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');

    :root {
      --color-bg: #ffffff;
      --color-primary: #111827;
      --color-secondary: #6b7280;
      --color-accent: #111827;
      --color-button-bg: #111827;
      --color-button-hover: #333f58;
      --color-card-bg: #f9fafb;
      --border-radius: 0.75rem;
      --shadow-light: rgba(0, 0, 0, 0.05);
      --transition-speed: 0.3s;
      --max-width: 1200px;
    }

    /* Reset */
    *, *::before, *::after {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background-color: var(--color-bg);
      color: var(--color-secondary);
      line-height: 1.6;
      font-size: 18px;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    a {
      color: var(--color-accent);
      text-decoration: none;
      border-bottom: 2px solid transparent;
      transition: border-color var(--transition-speed);
    }
    a:hover, a:focus {
      border-color: var(--color-accent);
      outline: none;
    }

    /* Container */
    .container {
      max-width: var(--max-width);
      margin-left: auto;
      margin-right: auto;
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }

    /* Navbar */
    nav {
      position: sticky;
      top: 0;
      background: var(--color-bg);
      box-shadow: 0 2px 8px var(--shadow-light);
      z-index: 1000;
      padding: 1rem 0;
    }
    nav .nav-inner {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: var(--max-width);
      margin: 0 auto;
      padding-left: 1.25rem;
      padding-right: 1.25rem;
    }
    nav .logo {
      font-size: 1.75rem;
      font-weight: 700;
      color: var(--color-primary);
      user-select: none;
      letter-spacing: -0.02em;
    }
    nav .nav-buttons {
      display: flex;
      gap: 1rem;
    }
    nav button {
      background: transparent;
      border: 2px solid var(--color-button-bg);
      color: var(--color-button-bg);
      font-weight: 600;
      font-size: 1rem;
      padding: 0.5rem 1.2rem;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: background-color var(--transition-speed), color var(--transition-speed), transform var(--transition-speed);
    }
    nav button:hover,
    nav button:focus {
      background-color: var(--color-button-hover);
      color: #fff;
      transform: scale(1.05);
      outline: none;
    }

    /* Hero Section */
    .hero {
      padding-top: 8rem;
      padding-bottom: 4rem;
      text-align: center;
      color: var(--color-primary);
    }
    .hero h1 {
      font-weight: 800;
      font-size: 3.5rem;
      margin-bottom: 1rem;
      user-select: none;
      line-height: 1.1;
    }
    .hero p {
      font-weight: 500;
      font-size: 1.25rem;
      max-width: 700px;
      margin-left: auto;
      margin-right: auto;
      color: var(--color-secondary);
      line-height: 1.5;
    }
    .hero .cta-button {
      margin-top: 3rem;
      background-color: var(--color-button-bg);
      color: #fff;
      border: none;
      padding: 0.9rem 2.5rem;
      font-size: 1.25rem;
      font-weight: 700;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: background-color var(--transition-speed), transform var(--transition-speed);
    }
    .hero .cta-button:hover,
    .hero .cta-button:focus {
      background-color: var(--color-button-hover);
      transform: scale(1.05);
      outline: none;
    }

    /* Section styling */
    section {
      background-color: var(--color-card-bg);
      box-shadow: 0 2px 10px var(--shadow-light);
      border-radius: var(--border-radius);
      margin-top: 4rem;
      margin-bottom: 4rem;
      padding: 2.5rem 2rem;
    }
    section h2 {
      font-weight: 700;
      color: var(--color-primary);
      font-size: 2rem;
      margin-bottom: 1.25rem;
      user-select: none;
    }

    /* Contact Form Styles */
    form {
      max-width: 480px;
      margin: 0 auto;
    }
    label {
      display: block;
      font-weight: 600;
      margin-bottom: 0.4rem;
      color: var(--color-primary);
    }
    input[type="text"],
    input[type="email"],
    textarea {
      width: 100%;
      padding: 0.85rem 1rem;
      font-size: 1rem;
      border: 1px solid #ddd;
      border-radius: var(--border-radius);
      font-family: 'Inter', sans-serif;
      margin-bottom: 1.5rem;
      resize: vertical;
      transition: border-color var(--transition-speed);
    }
    input[type="text"]:focus,
    input[type="email"]:focus,
    textarea:focus {
      outline: none;
      border-color: var(--color-accent);
      box-shadow: 0 0 8px var(--color-accent);
    }
    button[type="submit"] {
      display: block;
      width: 100%;
      padding: 1rem;
      background: var(--color-button-bg);
      color: #fff;
      font-weight: 700;
      font-size: 1.125rem;
      border: none;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: background-color var(--transition-speed);
    }
    button[type="submit"]:hover,
    button[type="submit"]:focus {
      background-color: var(--color-button-hover);
      outline: none;
    }

    /* Responsive Layout Section */
    .responsive-nav ul {
      list-style: none;
      display: flex;
      gap: 2rem;
      justify-content: center;
      padding: 0;
      margin: 0;
      font-weight: 600;
      font-size: 1.125rem;
      flex-wrap: wrap;
      user-select: none;
    }
    .responsive-nav a {
      color: var(--color-accent);
      padding: 0.4rem 0.6rem;
      border-radius: var(--border-radius);
      transition: background-color var(--transition-speed);
    }
    .responsive-nav a:hover,
    .responsive-nav a:focus {
      background-color: var(--color-button-hover);
      color: #fff;
      outline: none;
    }
    .grid-container {
      display: grid;
      grid-template-columns: 3fr 1fr;
      gap: 2rem;
      margin-top: 1.5rem;
    }
    .main-content, .sidebar {
      background: #fff;
      padding: 1.5rem;
      border-radius: var(--border-radius);
      box-shadow: 0 1px 6px var(--shadow-light);
      color: var(--color-primary);
    }
    .main-content h3,
    .sidebar h3 {
      margin-top: 0;
      margin-bottom: 1rem;
      font-weight: 700;
      font-size: 1.5rem;
    }
    .sidebar ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .sidebar li {
      margin-bottom: 0.7rem;
    }
    .sidebar a {
      color: var(--color-accent);
      font-weight: 600;
      transition: color var(--transition-speed);
    }
    .sidebar a:hover,
    .sidebar a:focus {
      color: var(--color-button-bg);
      outline: none;
    }
    footer {
      text-align: center;
      color: var(--color-secondary);
      font-size: 1rem;
      margin-top: 3rem;
      user-select: none;
    }
    /* Responsive adjustments */
    @media (max-width: 768px) {
      .grid-container {
        grid-template-columns: 1fr;
      }
      .responsive-nav ul {
        justify-content: center;
        gap: 1rem;
      }
    }

    /* To-Do List Styles */
    .todo-container {
      max-width: 600px;
      margin: 0 auto;
      color: var(--color-primary);
    }
    .todo-container h2 {
      text-align: center;
      margin-bottom: 1.5rem;
    }
    .input-section {
      display: flex;
      gap: 1rem;
      margin-bottom: 1.5rem;
    }
    #new-task {
      flex-grow: 1;
      padding: 0.85rem 1rem;
      font-size: 1rem;
      border: 1px solid #ddd;
      border-radius: var(--border-radius);
      font-family: 'Inter', sans-serif;
      transition: border-color var(--transition-speed);
    }
    #new-task:focus {
      outline: none;
      border-color: var(--color-accent);
      box-shadow: 0 0 8px var(--color-accent);
    }
    #add-task {
      background-color: var(--color-button-bg);
      color: #fff;
      font-weight: 700;
      font-size: 1.125rem;
      border: none;
      padding: 0 1.5rem;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: background-color var(--transition-speed);
    }
    #add-task:hover,
    #add-task:focus {
      background-color: var(--color-button-hover);
      outline: none;
    }
    ul#task-list {
      list-style: none;
      padding: 0;
      margin: 0;
      max-height: 280px;
      overflow-y: auto;
    }
    ul#task-list li {
      background-color: var(--color-card-bg);
      padding: 0.85rem 1rem;
      border-radius: var(--border-radius);
      margin-bottom: 0.75rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 1px 4px var(--shadow-light);
      font-weight: 600;
      letter-spacing: 0.02em;
    }
    ul#task-list button.delete-task {
      background-color: #e02424;
      color: white;
      border: none;
      border-radius: var(--border-radius);
      padding: 0.35rem 0.8rem;
      cursor: pointer;
      font-weight: 700;
      transition: background-color var(--transition-speed);
      user-select: none;
    }
    ul#task-list button.delete-task:hover,
    ul#task-list button.delete-task:focus {
      background-color: #b71b1b;
      outline: none;
    }
  </style>
</head>
<body>
  <nav role="navigation" aria-label="Main navigation">
    <div class="nav-inner container">
      <div class="logo">Project</div>
      <div class="nav-buttons">
        <button type="button" onclick="alert('Home button clicked')">Home</button>
        <button type="button" onclick="alert('About button clicked')">About</button>
        <button type="button" onclick="alert('Contact button clicked')">Contact</button>
      </div>
    </div>
  </nav>

  <header class="hero container" role="banner">
    <h1>Build Your First Modern Web Project</h1>
    <p>Explore forms, responsive layouts, dynamic lists, and more—all in one elegant page.</p>
    <button class="cta-button" type="button" onclick="alert('Let\'s get started!')">Get Started</button>
  </header>

  <!-- Contact Form -->
  <section class="container" aria-labelledby="contact-form-title">
    <h2 id="contact-form-title">Contact Form</h2>
    <form id="contactForm" novalidate>
      <label for="name">Name</label>
      <input type="text" id="name" name="name" placeholder="Your name" required />

      <label for="email">Email</label>
      <input type="email" id="email" name="email" placeholder="you@example.com" required />

      <label for="message">Message</label>
      <textarea id="message" name="message" rows="4" placeholder="Write your message" required></textarea>

      <button type="submit">Send Message</button>
    </form>
  </section>

  <!-- Responsive Layout Demo -->
  <section class="container" aria-labelledby="responsive-layout-title">
    <h2 id="responsive-layout-title">Responsive Layout Demo</h2>
    <nav class="responsive-nav" aria-label="Secondary navigation">
      <ul>
        <li><a href="#" tabindex="0">Home</a></li>
        <li><a href="#" tabindex="0">About</a></li>
        <li><a href="#" tabindex="0">Services</a></li>
        <li><a href="#" tabindex="0">Contact</a></li>
      </ul>
    </nav>
    <main class="grid-container">
      <article class="main-content">
        <h3>Main Content Area</h3>
        <p>This area uses CSS Grid for layout. It demonstrates how content and sidebar can be arranged responsively.</p>
      </article>
      <aside class="sidebar">
        <h3>Sidebar</h3>
        <ul>
          <li><a href="#" tabindex="0">Link 1</a></li>
          <li><a href="#" tabindex="0">Link 2</a></li>
          <li><a href="#" tabindex="0">Link 3</a></li>
        </ul>
      </aside>
    </main>
    <footer>
      &copy; 2024 Your Website
    </footer>
  </section>

  <!-- Dynamic To-Do List -->
  <section class="container todo-container" aria-labelledby="todo-list-title">
    <h2 id="todo-list-title">Dynamic To-Do List</h2>
    <div class="input-section">
      <input type="text" id="new-task" placeholder="Add a new task..." aria-label="New task input" />
      <button id="add-task" type="button" aria-label="Add task button">Add</button>
    </div>
    <ul id="task-list" aria-live="polite" aria-relevant="additions removals">
      <!-- Task items added dynamically here -->
    </ul>
  </section>

  <script>
    // Contact form validation and submission
    document.getElementById('contactForm').addEventListener('submit', function(event) {
      event.preventDefault(); // prevent actual submission for demo

      const name = this.name.value.trim();
      const email = this.email.value.trim();
      const message = this.message.value.trim();

      if (!name) {
        alert('Please enter your name.');
        this.name.focus();
        return;
      }

      if (!email) {
        alert('Please enter your email.');
        this.email.focus();
        return;
      } else if (!isValidEmail(email)) {
        alert('Please enter a valid email address.');
        this.email.focus();
        return;
      }

      if (!message) {
        alert('Please enter your message.');
        this.message.focus();
        return;
      }

      alert('Thank you for your message, ' + name + '! We will get back to you shortly.');
      this.reset();
    });

    function isValidEmail(email) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }

    // Dynamic To-Do List
    const addTaskBtn = document.getElementById('add-task');
    const taskList = document.getElementById('task-list');
    const newTaskInput = document.getElementById('new-task');

    addTaskBtn.addEventListener('click', () => {
      const taskText = newTaskInput.value.trim();
      if (taskText) {
        addTask(taskText);
        newTaskInput.value = '';
        newTaskInput.focus();
      }
    });

    // Allow Enter key to submit new task
    newTaskInput.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        addTaskBtn.click();
      }
    });

    function addTask(text) {
      const li = document.createElement('li');
      li.textContent = text;

      const delBtn = document.createElement('button');
      delBtn.textContent = 'Delete';
      delBtn.className = 'delete-task';
      delBtn.setAttribute('aria-label', `Delete task: ${text}`);

      delBtn.addEventListener('click', () => {
        li.remove();
      });

      li.appendChild(delBtn);
      taskList.appendChild(li);
    }
  </script>
</body>
</html>
